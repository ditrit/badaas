// Code generated by badctl v0.0.0, DO NOT EDIT.
package testintegration

import (
	badorm "github.com/ditrit/badaas/badorm"
	uuid "github.com/google/uuid"
	pq "github.com/lib/pq"
	"time"
)

func ProductIdCondition(v uuid.UUID) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "id",
		Value: v,
	}
}
func ProductCreatedAtCondition(v time.Time) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "created_at",
		Value: v,
	}
}
func ProductUpdatedAtCondition(v time.Time) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "updated_at",
		Value: v,
	}
}
func ProductStringCondition(v string) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "string",
		Value: v,
	}
}
func ProductIntCondition(v int) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "int",
		Value: v,
	}
}
func ProductIntPointerCondition(v *int) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "int_pointer",
		Value: v,
	}
}
func ProductFloatCondition(v float64) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "float",
		Value: v,
	}
}
func ProductBoolCondition(v bool) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "bool",
		Value: v,
	}
}
func ProductByteArrayCondition(v []uint8) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "byte_array",
		Value: v,
	}
}
func ProductMultiStringCondition(v MultiString) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "multi_string",
		Value: v,
	}
}
func ProductStringArrayCondition(v pq.StringArray) badorm.WhereCondition[Product] {
	return badorm.WhereCondition[Product]{
		Field: "string_array",
		Value: v,
	}
}
