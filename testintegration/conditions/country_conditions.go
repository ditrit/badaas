// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func CountryId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[models.Country] {
	return badorm.FieldCondition[models.Country, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func CountryCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Country] {
	return badorm.FieldCondition[models.Country, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func CountryUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Country] {
	return badorm.FieldCondition[models.Country, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func CountryDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[models.Country] {
	return badorm.FieldCondition[models.Country, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}

var countryNameFieldID = badorm.FieldIdentifier{Field: "Name"}

func CountryName(expr badorm.Expression[string]) badorm.WhereCondition[models.Country] {
	return badorm.FieldCondition[models.Country, string]{
		Expression:      expr,
		FieldIdentifier: countryNameFieldID,
	}
}
func CountryCapital(conditions ...badorm.Condition[models.City]) badorm.Condition[models.Country] {
	return badorm.JoinCondition[models.Country, models.City]{
		Conditions:    conditions,
		RelationField: "Capital",
		T1Field:       "ID",
		T2Field:       "CountryID",
	}
}

var CountryPreloadCapital = CountryCapital(CityPreloadAttributes)
var CountryPreloadAttributes = badorm.NewPreloadCondition[models.Country](countryNameFieldID)
var CountryPreloadRelations = []badorm.Condition[models.Country]{CountryPreloadCapital}
