// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func CountryId(exprs ...badorm.Expression[badorm.UUID]) badorm.FieldCondition[models.Country, badorm.UUID] {
	return badorm.FieldCondition[models.Country, badorm.UUID]{
		Expressions: exprs,
		Field:       "ID",
	}
}
func CountryCreatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[models.Country, time.Time] {
	return badorm.FieldCondition[models.Country, time.Time]{
		Expressions: exprs,
		Field:       "CreatedAt",
	}
}
func CountryUpdatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[models.Country, time.Time] {
	return badorm.FieldCondition[models.Country, time.Time]{
		Expressions: exprs,
		Field:       "UpdatedAt",
	}
}
func CountryDeletedAt(exprs ...badorm.Expression[gorm.DeletedAt]) badorm.FieldCondition[models.Country, gorm.DeletedAt] {
	return badorm.FieldCondition[models.Country, gorm.DeletedAt]{
		Expressions: exprs,
		Field:       "DeletedAt",
	}
}
func CountryName(exprs ...badorm.Expression[string]) badorm.FieldCondition[models.Country, string] {
	return badorm.FieldCondition[models.Country, string]{
		Expressions: exprs,
		Field:       "Name",
	}
}
func CountryCapital(conditions ...badorm.Condition[models.City]) badorm.Condition[models.Country] {
	return badorm.JoinCondition[models.Country, models.City]{
		Conditions: conditions,
		T1Field:    "ID",
		T2Field:    "CountryID",
	}
}
func CityCountry(conditions ...badorm.Condition[models.Country]) badorm.Condition[models.City] {
	return badorm.JoinCondition[models.City, models.Country]{
		Conditions: conditions,
		T1Field:    "CountryID",
		T2Field:    "ID",
	}
}
