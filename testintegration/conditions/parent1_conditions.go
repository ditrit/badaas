// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func Parent1Id(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Parent1] {
	return orm.FieldCondition[models.Parent1, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: orm.IDFieldID,
	}
}
func Parent1CreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Parent1] {
	return orm.FieldCondition[models.Parent1, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.CreatedAtFieldID,
	}
}
func Parent1UpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Parent1] {
	return orm.FieldCondition[models.Parent1, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.UpdatedAtFieldID,
	}
}
func Parent1DeletedAt(operator orm.Operator[gorm.DeletedAt]) orm.WhereCondition[models.Parent1] {
	return orm.FieldCondition[models.Parent1, gorm.DeletedAt]{
		Operator:      operator,
		FieldIdentifier: orm.DeletedAtFieldID,
	}
}
func Parent1ParentParent(conditions ...orm.Condition[models.ParentParent]) orm.IJoinCondition[models.Parent1] {
	return orm.JoinCondition[models.Parent1, models.ParentParent]{
		Conditions:         conditions,
		RelationField:      "ParentParent",
		T1Field:            "ParentParentID",
		T1PreloadCondition: Parent1PreloadAttributes,
		T2Field:            "ID",
	}
}

var Parent1PreloadParentParent = Parent1ParentParent(ParentParentPreloadAttributes)
var parent1ParentParentIdFieldID = orm.FieldIdentifier{Field: "ParentParentID"}

func Parent1ParentParentId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Parent1] {
	return orm.FieldCondition[models.Parent1, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: parent1ParentParentIdFieldID,
	}
}

var Parent1PreloadAttributes = orm.NewPreloadCondition[models.Parent1](parent1ParentParentIdFieldID)
var Parent1PreloadRelations = []orm.Condition[models.Parent1]{Parent1PreloadParentParent}
