// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var companyType = reflect.TypeOf(*new(models.Company))
var CompanyIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: companyType,
}

func CompanyId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: CompanyIdField,
	}
}

var CompanyCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: companyType,
}

func CompanyCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, time.Time]{
		Expression:      expr,
		FieldIdentifier: CompanyCreatedAtField,
	}
}

var CompanyUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: companyType,
}

func CompanyUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, time.Time]{
		Expression:      expr,
		FieldIdentifier: CompanyUpdatedAtField,
	}
}

var CompanyDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: companyType,
}

func CompanyDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: CompanyDeletedAtField,
	}
}

var CompanyNameField = badorm.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: companyType,
}

func CompanyName(expr badorm.Expression[string]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, string]{
		Expression:      expr,
		FieldIdentifier: CompanyNameField,
	}
}
func CompanyPreloadSellers(nestedPreloads ...badorm.IJoinCondition[models.Seller]) badorm.Condition[models.Company] {
	return badorm.NewCollectionPreloadCondition[models.Company, models.Seller]("Sellers", nestedPreloads)
}

var CompanyPreloadAttributes = badorm.NewPreloadCondition[models.Company](CompanyIdField, CompanyCreatedAtField, CompanyUpdatedAtField, CompanyDeletedAtField, CompanyNameField)
var CompanyPreloadRelations = []badorm.Condition[models.Company]{CompanyPreloadSellers()}
