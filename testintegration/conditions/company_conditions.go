// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func CompanyId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, badorm.UUID]{
		Expression: expr,
		Field:      "ID",
	}
}
func CompanyCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, time.Time]{
		Expression: expr,
		Field:      "CreatedAt",
	}
}
func CompanyUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, time.Time]{
		Expression: expr,
		Field:      "UpdatedAt",
	}
}
func CompanyDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, gorm.DeletedAt]{
		Expression: expr,
		Field:      "DeletedAt",
	}
}
func CompanyName(expr badorm.Expression[string]) badorm.WhereCondition[models.Company] {
	return badorm.FieldCondition[models.Company, string]{
		Expression: expr,
		Field:      "Name",
	}
}
func SellerCompany(conditions ...badorm.Condition[models.Company]) badorm.Condition[models.Seller] {
	return badorm.JoinCondition[models.Seller, models.Company]{
		Conditions: conditions,
		T1Field:    "CompanyID",
		T2Field:    "ID",
	}
}
