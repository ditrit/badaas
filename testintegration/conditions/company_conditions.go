// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func CompanyId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Company] {
	return orm.FieldCondition[models.Company, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: orm.IDFieldID,
	}
}
func CompanyCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Company] {
	return orm.FieldCondition[models.Company, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.CreatedAtFieldID,
	}
}
func CompanyUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Company] {
	return orm.FieldCondition[models.Company, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.UpdatedAtFieldID,
	}
}
func CompanyDeletedAt(operator orm.Operator[gorm.DeletedAt]) orm.WhereCondition[models.Company] {
	return orm.FieldCondition[models.Company, gorm.DeletedAt]{
		Operator:      operator,
		FieldIdentifier: orm.DeletedAtFieldID,
	}
}

var companyNameFieldID = orm.FieldIdentifier{Field: "Name"}

func CompanyName(operator orm.Operator[string]) orm.WhereCondition[models.Company] {
	return orm.FieldCondition[models.Company, string]{
		Operator:      operator,
		FieldIdentifier: companyNameFieldID,
	}
}
func CompanyPreloadSellers(nestedPreloads ...orm.IJoinCondition[models.Seller]) orm.Condition[models.Company] {
	return orm.NewCollectionPreloadCondition[models.Company, models.Seller]("Sellers", nestedPreloads)
}

var CompanyPreloadAttributes = orm.NewPreloadCondition[models.Company](companyNameFieldID)
var CompanyPreloadRelations = []orm.Condition[models.Company]{CompanyPreloadSellers()}
