// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func EmployeeId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: orm.IDFieldID,
	}
}
func EmployeeCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.CreatedAtFieldID,
	}
}
func EmployeeUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.UpdatedAtFieldID,
	}
}
func EmployeeDeletedAt(operator orm.Operator[gorm.DeletedAt]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, gorm.DeletedAt]{
		Operator:      operator,
		FieldIdentifier: orm.DeletedAtFieldID,
	}
}

var employeeNameFieldID = orm.FieldIdentifier{Field: "Name"}

func EmployeeName(operator orm.Operator[string]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, string]{
		Operator:      operator,
		FieldIdentifier: employeeNameFieldID,
	}
}
func EmployeeBoss(conditions ...orm.Condition[models.Employee]) orm.IJoinCondition[models.Employee] {
	return orm.JoinCondition[models.Employee, models.Employee]{
		Conditions:         conditions,
		RelationField:      "Boss",
		T1Field:            "BossID",
		T1PreloadCondition: EmployeePreloadAttributes,
		T2Field:            "ID",
	}
}

var EmployeePreloadBoss = EmployeeBoss(EmployeePreloadAttributes)
var employeeBossIdFieldID = orm.FieldIdentifier{Field: "BossID"}

func EmployeeBossId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Employee] {
	return orm.FieldCondition[models.Employee, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: employeeBossIdFieldID,
	}
}

var EmployeePreloadAttributes = orm.NewPreloadCondition[models.Employee](employeeNameFieldID, employeeBossIdFieldID)
var EmployeePreloadRelations = []orm.Condition[models.Employee]{EmployeePreloadBoss}
