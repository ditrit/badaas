// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func PhoneId(expr badorm.Expression[uint]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, uint]{
		Expression: expr,
		Field:      "ID",
	}
}
func PhoneCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, time.Time]{
		Expression: expr,
		Field:      "CreatedAt",
	}
}
func PhoneUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, time.Time]{
		Expression: expr,
		Field:      "UpdatedAt",
	}
}
func PhoneDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, gorm.DeletedAt]{
		Expression: expr,
		Field:      "DeletedAt",
	}
}
func PhoneName(expr badorm.Expression[string]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, string]{
		Expression: expr,
		Field:      "Name",
	}
}
func PhoneBrand(conditions ...badorm.Condition[models.Brand]) badorm.Condition[models.Phone] {
	return badorm.JoinCondition[models.Phone, models.Brand]{
		Conditions:    conditions,
		RelationField: "Brand",
		T1Field:       "BrandID",
		T2Field:       "ID",
	}
}
func PhoneBrandId(expr badorm.Expression[uint]) badorm.WhereCondition[models.Phone] {
	return badorm.FieldCondition[models.Phone, uint]{
		Expression: expr,
		Field:      "BrandID",
	}
}
