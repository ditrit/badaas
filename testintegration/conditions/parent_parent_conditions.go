// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var parentParentType = reflect.TypeOf(*new(models.ParentParent))
var ParentParentIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: parentParentType,
}

func ParentParentId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, badorm.UUID]{
		FieldIdentifier: ParentParentIdField,
		Operator:        operator,
	}
}

var ParentParentCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: parentParentType,
}

func ParentParentCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, time.Time]{
		FieldIdentifier: ParentParentCreatedAtField,
		Operator:        operator,
	}
}

var ParentParentUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: parentParentType,
}

func ParentParentUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, time.Time]{
		FieldIdentifier: ParentParentUpdatedAtField,
		Operator:        operator,
	}
}

var ParentParentDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: parentParentType,
}

func ParentParentDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, gorm.DeletedAt]{
		FieldIdentifier: ParentParentDeletedAtField,
		Operator:        operator,
	}
}

var ParentParentNameField = badorm.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: parentParentType,
}

func ParentParentName(operator badorm.Operator[string]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, string]{
		FieldIdentifier: ParentParentNameField,
		Operator:        operator,
	}
}

var ParentParentNumberField = badorm.FieldIdentifier[int]{
	Field:     "Number",
	ModelType: parentParentType,
}

func ParentParentNumber(operator badorm.Operator[int]) badorm.WhereCondition[models.ParentParent] {
	return badorm.FieldCondition[models.ParentParent, int]{
		FieldIdentifier: ParentParentNumberField,
		Operator:        operator,
	}
}

var ParentParentPreloadAttributes = badorm.NewPreloadCondition[models.ParentParent](ParentParentIdField, ParentParentCreatedAtField, ParentParentUpdatedAtField, ParentParentDeletedAtField, ParentParentNameField, ParentParentNumberField)
