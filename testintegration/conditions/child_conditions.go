// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func ChildId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: orm.IDFieldID,
	}
}
func ChildCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.CreatedAtFieldID,
	}
}
func ChildUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.UpdatedAtFieldID,
	}
}
func ChildDeletedAt(operator orm.Operator[gorm.DeletedAt]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, gorm.DeletedAt]{
		Operator:      operator,
		FieldIdentifier: orm.DeletedAtFieldID,
	}
}
func ChildParent1(conditions ...orm.Condition[models.Parent1]) orm.IJoinCondition[models.Child] {
	return orm.JoinCondition[models.Child, models.Parent1]{
		Conditions:         conditions,
		RelationField:      "Parent1",
		T1Field:            "Parent1ID",
		T1PreloadCondition: ChildPreloadAttributes,
		T2Field:            "ID",
	}
}

var ChildPreloadParent1 = ChildParent1(Parent1PreloadAttributes)
var childParent1IdFieldID = orm.FieldIdentifier{Field: "Parent1ID"}

func ChildParent1Id(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: childParent1IdFieldID,
	}
}
func ChildParent2(conditions ...orm.Condition[models.Parent2]) orm.IJoinCondition[models.Child] {
	return orm.JoinCondition[models.Child, models.Parent2]{
		Conditions:         conditions,
		RelationField:      "Parent2",
		T1Field:            "Parent2ID",
		T1PreloadCondition: ChildPreloadAttributes,
		T2Field:            "ID",
	}
}

var ChildPreloadParent2 = ChildParent2(Parent2PreloadAttributes)
var childParent2IdFieldID = orm.FieldIdentifier{Field: "Parent2ID"}

func ChildParent2Id(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Child] {
	return orm.FieldCondition[models.Child, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: childParent2IdFieldID,
	}
}

var ChildPreloadAttributes = orm.NewPreloadCondition[models.Child](childParent1IdFieldID, childParent2IdFieldID)
var ChildPreloadRelations = []orm.Condition[models.Child]{ChildPreloadParent1, ChildPreloadParent2}
