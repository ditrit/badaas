// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func UniversityId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[models.University] {
	return badorm.FieldCondition[models.University, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func UniversityCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.University] {
	return badorm.FieldCondition[models.University, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func UniversityUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[models.University] {
	return badorm.FieldCondition[models.University, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func UniversityDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[models.University] {
	return badorm.FieldCondition[models.University, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}

var universityNameFieldID = badorm.FieldIdentifier{Field: "Name"}

func UniversityName(expr badorm.Expression[string]) badorm.WhereCondition[models.University] {
	return badorm.FieldCondition[models.University, string]{
		Expression:      expr,
		FieldIdentifier: universityNameFieldID,
	}
}

var UniversityPreloadAttributes = badorm.NewPreloadCondition[models.University](universityNameFieldID)
var UniversityPreloadRelations = []badorm.Condition[models.University]{}
