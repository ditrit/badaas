// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func SaleId(v badorm.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "ID",
		Value: v,
	}
}
func SaleCreatedAt(v time.Time) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "CreatedAt",
		Value: v,
	}
}
func SaleUpdatedAt(v time.Time) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "UpdatedAt",
		Value: v,
	}
}
func SaleDeletedAt(v gorm.DeletedAt) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "DeletedAt",
		Value: v,
	}
}
func SaleCode(v int) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "Code",
		Value: v,
	}
}
func SaleDescription(v string) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "Description",
		Value: v,
	}
}
func SaleProduct(conditions ...badorm.Condition[models.Product]) badorm.Condition[models.Sale] {
	return badorm.JoinCondition[models.Sale, models.Product]{
		Conditions: conditions,
		T1Field:    "ProductID",
		T2Field:    "ID",
	}
}
func SaleProductId(v badorm.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "ProductID",
		Value: v,
	}
}
func SaleSeller(conditions ...badorm.Condition[models.Seller]) badorm.Condition[models.Sale] {
	return badorm.JoinCondition[models.Sale, models.Seller]{
		Conditions: conditions,
		T1Field:    "SellerID",
		T2Field:    "ID",
	}
}
func SaleSellerId(v *badorm.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "SellerID",
		Value: v,
	}
}
