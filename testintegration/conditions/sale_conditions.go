// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	gorm "gorm.io/gorm"
	"time"
)

func SaleId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: orm.IDFieldID,
	}
}
func SaleCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.CreatedAtFieldID,
	}
}
func SaleUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, time.Time]{
		Operator:      operator,
		FieldIdentifier: orm.UpdatedAtFieldID,
	}
}
func SaleDeletedAt(operator orm.Operator[gorm.DeletedAt]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, gorm.DeletedAt]{
		Operator:      operator,
		FieldIdentifier: orm.DeletedAtFieldID,
	}
}

var saleCodeFieldID = orm.FieldIdentifier{Field: "Code"}

func SaleCode(operator orm.Operator[int]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, int]{
		Operator:      operator,
		FieldIdentifier: saleCodeFieldID,
	}
}

var saleDescriptionFieldID = orm.FieldIdentifier{Field: "Description"}

func SaleDescription(operator orm.Operator[string]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, string]{
		Operator:      operator,
		FieldIdentifier: saleDescriptionFieldID,
	}
}
func SaleProduct(conditions ...orm.Condition[models.Product]) orm.IJoinCondition[models.Sale] {
	return orm.JoinCondition[models.Sale, models.Product]{
		Conditions:         conditions,
		RelationField:      "Product",
		T1Field:            "ProductID",
		T1PreloadCondition: SalePreloadAttributes,
		T2Field:            "ID",
	}
}

var SalePreloadProduct = SaleProduct(ProductPreloadAttributes)
var saleProductIdFieldID = orm.FieldIdentifier{Field: "ProductID"}

func SaleProductId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: saleProductIdFieldID,
	}
}
func SaleSeller(conditions ...orm.Condition[models.Seller]) orm.IJoinCondition[models.Sale] {
	return orm.JoinCondition[models.Sale, models.Seller]{
		Conditions:         conditions,
		RelationField:      "Seller",
		T1Field:            "SellerID",
		T1PreloadCondition: SalePreloadAttributes,
		T2Field:            "ID",
	}
}

var SalePreloadSeller = SaleSeller(SellerPreloadAttributes)
var saleSellerIdFieldID = orm.FieldIdentifier{Field: "SellerID"}

func SaleSellerId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		Operator:      operator,
		FieldIdentifier: saleSellerIdFieldID,
	}
}

var SalePreloadAttributes = orm.NewPreloadCondition[models.Sale](saleCodeFieldID, saleDescriptionFieldID, saleProductIdFieldID, saleSellerIdFieldID)
var SalePreloadRelations = []orm.Condition[models.Sale]{SalePreloadProduct, SalePreloadSeller}
