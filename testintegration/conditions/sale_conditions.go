// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	"time"
)

func SaleId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		FieldIdentifier: orm.IDFieldID,
		Operator:        operator,
	}
}
func SaleCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, time.Time]{
		FieldIdentifier: orm.CreatedAtFieldID,
		Operator:        operator,
	}
}
func SaleUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, time.Time]{
		FieldIdentifier: orm.UpdatedAtFieldID,
		Operator:        operator,
	}
}
func SaleDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, time.Time]{
		FieldIdentifier: orm.DeletedAtFieldID,
		Operator:        operator,
	}
}

var saleCodeFieldID = orm.FieldIdentifier{Field: "Code"}

func SaleCode(operator orm.Operator[int]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, int]{
		FieldIdentifier: saleCodeFieldID,
		Operator:        operator,
	}
}

var saleDescriptionFieldID = orm.FieldIdentifier{Field: "Description"}

func SaleDescription(operator orm.Operator[string]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, string]{
		FieldIdentifier: saleDescriptionFieldID,
		Operator:        operator,
	}
}
func SaleProduct(conditions ...orm.Condition[models.Product]) orm.Condition[models.Sale] {
	return orm.JoinCondition[models.Sale, models.Product]{
		Conditions:    conditions,
		RelationField: "Product",
		T1Field:       "ProductID",
		T2Field:       "ID",
	}
}

var saleProductIdFieldID = orm.FieldIdentifier{Field: "ProductID"}

func SaleProductId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		FieldIdentifier: saleProductIdFieldID,
		Operator:        operator,
	}
}
func SaleSeller(conditions ...orm.Condition[models.Seller]) orm.Condition[models.Sale] {
	return orm.JoinCondition[models.Sale, models.Seller]{
		Conditions:    conditions,
		RelationField: "Seller",
		T1Field:       "SellerID",
		T2Field:       "ID",
	}
}

var saleSellerIdFieldID = orm.FieldIdentifier{Field: "SellerID"}

func SaleSellerId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Sale] {
	return orm.FieldCondition[models.Sale, orm.UUID]{
		FieldIdentifier: saleSellerIdFieldID,
		Operator:        operator,
	}
}
