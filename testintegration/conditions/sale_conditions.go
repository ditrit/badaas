// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	models "github.com/ditrit/badaas/testintegration/models"
	uuid "github.com/google/uuid"
	gorm "gorm.io/gorm"
	"time"
)

func SaleId(v uuid.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "id",
		Value: v,
	}
}
func SaleCreatedAt(v time.Time) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "created_at",
		Value: v,
	}
}
func SaleUpdatedAt(v time.Time) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "updated_at",
		Value: v,
	}
}
func SaleDeletedAt(v gorm.DeletedAt) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "deleted_at",
		Value: v,
	}
}
func SaleCode(v int) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "code",
		Value: v,
	}
}
func SaleDescription(v string) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "description",
		Value: v,
	}
}
func SaleProduct(conditions ...badorm.Condition[models.Product]) badorm.Condition[models.Sale] {
	return badorm.JoinCondition[models.Sale, models.Product]{
		Conditions: conditions,
		T1Field:    "product_id",
		T2Field:    "id",
	}
}
func SaleProductId(v uuid.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "product_id",
		Value: v,
	}
}
func SaleSeller(conditions ...badorm.Condition[models.Seller]) badorm.Condition[models.Sale] {
	return badorm.JoinCondition[models.Sale, models.Seller]{
		Conditions: conditions,
		T1Field:    "seller_id",
		T2Field:    "id",
	}
}
func SaleSellerId(v *uuid.UUID) badorm.WhereCondition[models.Sale] {
	return badorm.WhereCondition[models.Sale]{
		Field: "seller_id",
		Value: v,
	}
}
