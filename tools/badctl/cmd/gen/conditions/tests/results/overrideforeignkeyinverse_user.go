// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	overrideforeignkeyinverse "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/overrideforeignkeyinverse"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var userType = reflect.TypeOf(*new(overrideforeignkeyinverse.User))
var UserIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: userType,
}

func UserId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[overrideforeignkeyinverse.User] {
	return badorm.FieldCondition[overrideforeignkeyinverse.User, badorm.UUID]{
		FieldIdentifier: UserIdField,
		Operator:        operator,
	}
}

var UserCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: userType,
}

func UserCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[overrideforeignkeyinverse.User] {
	return badorm.FieldCondition[overrideforeignkeyinverse.User, time.Time]{
		FieldIdentifier: UserCreatedAtField,
		Operator:        operator,
	}
}

var UserUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: userType,
}

func UserUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[overrideforeignkeyinverse.User] {
	return badorm.FieldCondition[overrideforeignkeyinverse.User, time.Time]{
		FieldIdentifier: UserUpdatedAtField,
		Operator:        operator,
	}
}

var UserDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: userType,
}

func UserDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[overrideforeignkeyinverse.User] {
	return badorm.FieldCondition[overrideforeignkeyinverse.User, gorm.DeletedAt]{
		FieldIdentifier: UserDeletedAtField,
		Operator:        operator,
	}
}
func UserCreditCard(conditions ...badorm.Condition[overrideforeignkeyinverse.CreditCard]) badorm.IJoinCondition[overrideforeignkeyinverse.User] {
	return badorm.JoinCondition[overrideforeignkeyinverse.User, overrideforeignkeyinverse.CreditCard]{
		Conditions:         conditions,
		RelationField:      "CreditCard",
		T1Field:            "ID",
		T1PreloadCondition: UserPreloadAttributes,
		T2Field:            "UserReference",
	}
}

var UserPreloadCreditCard = UserCreditCard(CreditCardPreloadAttributes)
var UserPreloadAttributes = badorm.NewPreloadCondition[overrideforeignkeyinverse.User](UserIdField, UserCreatedAtField, UserUpdatedAtField, UserDeletedAtField)
var UserPreloadRelations = []badorm.Condition[overrideforeignkeyinverse.User]{UserPreloadCreditCard}
