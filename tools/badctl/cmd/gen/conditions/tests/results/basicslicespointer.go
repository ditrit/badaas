// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	basicslicespointer "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/basicslicespointer"
	gorm "gorm.io/gorm"
	"time"
)

func BasicSlicesPointerId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, badorm.UUID]{
		Expression: expr,
		Field:      "ID",
	}
}
func BasicSlicesPointerCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, time.Time]{
		Expression: expr,
		Field:      "CreatedAt",
	}
}
func BasicSlicesPointerUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, time.Time]{
		Expression: expr,
		Field:      "UpdatedAt",
	}
}
func BasicSlicesPointerDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, gorm.DeletedAt]{
		Expression: expr,
		Field:      "DeletedAt",
	}
}
func BasicSlicesPointerBool(expr badorm.Expression[[]bool]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []bool]{
		Expression: expr,
		Field:      "Bool",
	}
}
func BasicSlicesPointerInt(expr badorm.Expression[[]int]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []int]{
		Expression: expr,
		Field:      "Int",
	}
}
func BasicSlicesPointerInt8(expr badorm.Expression[[]int8]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []int8]{
		Expression: expr,
		Field:      "Int8",
	}
}
func BasicSlicesPointerInt16(expr badorm.Expression[[]int16]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []int16]{
		Expression: expr,
		Field:      "Int16",
	}
}
func BasicSlicesPointerInt32(expr badorm.Expression[[]int32]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []int32]{
		Expression: expr,
		Field:      "Int32",
	}
}
func BasicSlicesPointerInt64(expr badorm.Expression[[]int64]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []int64]{
		Expression: expr,
		Field:      "Int64",
	}
}
func BasicSlicesPointerUInt(expr badorm.Expression[[]uint]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint]{
		Expression: expr,
		Field:      "UInt",
	}
}
func BasicSlicesPointerUInt8(expr badorm.Expression[[]uint8]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint8]{
		Expression: expr,
		Field:      "UInt8",
	}
}
func BasicSlicesPointerUInt16(expr badorm.Expression[[]uint16]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint16]{
		Expression: expr,
		Field:      "UInt16",
	}
}
func BasicSlicesPointerUInt32(expr badorm.Expression[[]uint32]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint32]{
		Expression: expr,
		Field:      "UInt32",
	}
}
func BasicSlicesPointerUInt64(expr badorm.Expression[[]uint64]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint64]{
		Expression: expr,
		Field:      "UInt64",
	}
}
func BasicSlicesPointerUIntptr(expr badorm.Expression[[]uintptr]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uintptr]{
		Expression: expr,
		Field:      "UIntptr",
	}
}
func BasicSlicesPointerFloat32(expr badorm.Expression[[]float32]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []float32]{
		Expression: expr,
		Field:      "Float32",
	}
}
func BasicSlicesPointerFloat64(expr badorm.Expression[[]float64]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []float64]{
		Expression: expr,
		Field:      "Float64",
	}
}
func BasicSlicesPointerComplex64(expr badorm.Expression[[]complex64]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []complex64]{
		Expression: expr,
		Field:      "Complex64",
	}
}
func BasicSlicesPointerComplex128(expr badorm.Expression[[]complex128]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []complex128]{
		Expression: expr,
		Field:      "Complex128",
	}
}
func BasicSlicesPointerString(expr badorm.Expression[[]string]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []string]{
		Expression: expr,
		Field:      "String",
	}
}
func BasicSlicesPointerByte(expr badorm.Expression[[]uint8]) badorm.WhereCondition[basicslicespointer.BasicSlicesPointer] {
	return badorm.FieldCondition[basicslicespointer.BasicSlicesPointer, []uint8]{
		Expression: expr,
		Field:      "Byte",
	}
}
