// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	overridereferences "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/overridereferences"
	gorm "gorm.io/gorm"
	"time"
)

func PhoneId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[overridereferences.Phone] {
	return badorm.FieldCondition[overridereferences.Phone, badorm.UUID]{
		Expression: expr,
		Field:      "ID",
	}
}
func PhoneCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[overridereferences.Phone] {
	return badorm.FieldCondition[overridereferences.Phone, time.Time]{
		Expression: expr,
		Field:      "CreatedAt",
	}
}
func PhoneUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[overridereferences.Phone] {
	return badorm.FieldCondition[overridereferences.Phone, time.Time]{
		Expression: expr,
		Field:      "UpdatedAt",
	}
}
func PhoneDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[overridereferences.Phone] {
	return badorm.FieldCondition[overridereferences.Phone, gorm.DeletedAt]{
		Expression: expr,
		Field:      "DeletedAt",
	}
}
func PhoneBrand(conditions ...badorm.Condition[overridereferences.Brand]) badorm.Condition[overridereferences.Phone] {
	return badorm.JoinCondition[overridereferences.Phone, overridereferences.Brand]{
		Conditions: conditions,
		T1Field:    "BrandName",
		T2Field:    "Name",
	}
}
func PhoneBrandName(expr badorm.Expression[string]) badorm.WhereCondition[overridereferences.Phone] {
	return badorm.FieldCondition[overridereferences.Phone, string]{
		Expression: expr,
		Field:      "BrandName",
	}
}
