// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	hasmanywithpointers "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/hasmanywithpointers"
	gorm "gorm.io/gorm"
	"time"
)

func CompanyWithPointersId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[hasmanywithpointers.CompanyWithPointers] {
	return badorm.FieldCondition[hasmanywithpointers.CompanyWithPointers, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func CompanyWithPointersCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasmanywithpointers.CompanyWithPointers] {
	return badorm.FieldCondition[hasmanywithpointers.CompanyWithPointers, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func CompanyWithPointersUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasmanywithpointers.CompanyWithPointers] {
	return badorm.FieldCondition[hasmanywithpointers.CompanyWithPointers, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func CompanyWithPointersDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[hasmanywithpointers.CompanyWithPointers] {
	return badorm.FieldCondition[hasmanywithpointers.CompanyWithPointers, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}
func CompanyWithPointersPreloadSellers(nestedPreloads ...badorm.IJoinCondition[hasmanywithpointers.SellerInPointers]) badorm.Condition[hasmanywithpointers.CompanyWithPointers] {
	return badorm.NewCollectionPreloadCondition[hasmanywithpointers.CompanyWithPointers, hasmanywithpointers.SellerInPointers]("Sellers", nestedPreloads)
}

var CompanyWithPointersPreloadAttributes = badorm.NewPreloadCondition[hasmanywithpointers.CompanyWithPointers]()
var CompanyWithPointersPreloadRelations = []badorm.Condition[hasmanywithpointers.CompanyWithPointers]{CompanyWithPointersPreloadSellers()}
