// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	belongsto "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/belongsto"
	gorm "gorm.io/gorm"
	"time"
)

func OwnedId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[belongsto.Owned] {
	return badorm.FieldCondition[belongsto.Owned, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func OwnedCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[belongsto.Owned] {
	return badorm.FieldCondition[belongsto.Owned, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func OwnedUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[belongsto.Owned] {
	return badorm.FieldCondition[belongsto.Owned, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func OwnedDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[belongsto.Owned] {
	return badorm.FieldCondition[belongsto.Owned, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}
func OwnedOwner(conditions ...badorm.Condition[belongsto.Owner]) badorm.Condition[belongsto.Owned] {
	return badorm.JoinCondition[belongsto.Owned, belongsto.Owner]{
		Conditions:    conditions,
		RelationField: "Owner",
		T1Field:       "OwnerID",
		T2Field:       "ID",
	}
}

var ownedOwnerIdFieldID = badorm.FieldIdentifier{Field: "OwnerID"}

func OwnedOwnerId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[belongsto.Owned] {
	return badorm.FieldCondition[belongsto.Owned, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: ownedOwnerIdFieldID,
	}
}

var OwnedPreload = badorm.NewPreloadCondition[belongsto.Owned](ownedOwnerIdFieldID)
