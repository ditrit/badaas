// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	hasmany "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/hasmany"
	gorm "gorm.io/gorm"
	"time"
)

func CompanyId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[hasmany.Company] {
	return badorm.FieldCondition[hasmany.Company, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func CompanyCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasmany.Company] {
	return badorm.FieldCondition[hasmany.Company, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func CompanyUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasmany.Company] {
	return badorm.FieldCondition[hasmany.Company, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func CompanyDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[hasmany.Company] {
	return badorm.FieldCondition[hasmany.Company, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}
func CompanyPreloadSellers(nestedPreloads ...badorm.IJoinCondition[hasmany.Seller]) badorm.Condition[hasmany.Company] {
	return badorm.NewCollectionPreloadCondition[hasmany.Company, hasmany.Seller]("Sellers", nestedPreloads)
}

var CompanyPreloadAttributes = badorm.NewPreloadCondition[hasmany.Company]()
var CompanyPreloadRelations = []badorm.Condition[hasmany.Company]{CompanyPreloadSellers()}
