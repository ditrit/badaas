// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	selfreferential "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/selfreferential"
	gorm "gorm.io/gorm"
	"time"
)

func EmployeeId(exprs ...badorm.Expression[badorm.UUID]) badorm.FieldCondition[selfreferential.Employee, badorm.UUID] {
	return badorm.FieldCondition[selfreferential.Employee, badorm.UUID]{
		Expressions: exprs,
		Field:       "ID",
	}
}
func EmployeeCreatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[selfreferential.Employee, time.Time] {
	return badorm.FieldCondition[selfreferential.Employee, time.Time]{
		Expressions: exprs,
		Field:       "CreatedAt",
	}
}
func EmployeeUpdatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[selfreferential.Employee, time.Time] {
	return badorm.FieldCondition[selfreferential.Employee, time.Time]{
		Expressions: exprs,
		Field:       "UpdatedAt",
	}
}
func EmployeeDeletedAt(exprs ...badorm.Expression[gorm.DeletedAt]) badorm.FieldCondition[selfreferential.Employee, gorm.DeletedAt] {
	return badorm.FieldCondition[selfreferential.Employee, gorm.DeletedAt]{
		Expressions: exprs,
		Field:       "DeletedAt",
	}
}
func EmployeeBoss(conditions ...badorm.Condition[selfreferential.Employee]) badorm.Condition[selfreferential.Employee] {
	return badorm.JoinCondition[selfreferential.Employee, selfreferential.Employee]{
		Conditions: conditions,
		T1Field:    "BossID",
		T2Field:    "ID",
	}
}
func EmployeeBossId(exprs ...badorm.Expression[*badorm.UUID]) badorm.FieldCondition[selfreferential.Employee, *badorm.UUID] {
	return badorm.FieldCondition[selfreferential.Employee, *badorm.UUID]{
		Expressions: exprs,
		Field:       "BossID",
	}
}
