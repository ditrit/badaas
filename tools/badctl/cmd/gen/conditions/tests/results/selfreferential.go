// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	selfreferential "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/selfreferential"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var employeeType = reflect.TypeOf(*new(selfreferential.Employee))
var EmployeeIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: employeeType,
}

func EmployeeId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[selfreferential.Employee] {
	return badorm.FieldCondition[selfreferential.Employee, badorm.UUID]{
		FieldIdentifier: EmployeeIdField,
		Operator:        operator,
	}
}

var EmployeeCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: employeeType,
}

func EmployeeCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[selfreferential.Employee] {
	return badorm.FieldCondition[selfreferential.Employee, time.Time]{
		FieldIdentifier: EmployeeCreatedAtField,
		Operator:        operator,
	}
}

var EmployeeUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: employeeType,
}

func EmployeeUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[selfreferential.Employee] {
	return badorm.FieldCondition[selfreferential.Employee, time.Time]{
		FieldIdentifier: EmployeeUpdatedAtField,
		Operator:        operator,
	}
}

var EmployeeDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: employeeType,
}

func EmployeeDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[selfreferential.Employee] {
	return badorm.FieldCondition[selfreferential.Employee, gorm.DeletedAt]{
		FieldIdentifier: EmployeeDeletedAtField,
		Operator:        operator,
	}
}
func EmployeeBoss(conditions ...badorm.Condition[selfreferential.Employee]) badorm.IJoinCondition[selfreferential.Employee] {
	return badorm.JoinCondition[selfreferential.Employee, selfreferential.Employee]{
		Conditions:         conditions,
		RelationField:      "Boss",
		T1Field:            "BossID",
		T1PreloadCondition: EmployeePreloadAttributes,
		T2Field:            "ID",
	}
}

var EmployeePreloadBoss = EmployeeBoss(EmployeePreloadAttributes)
var EmployeeBossIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "BossID",
	ModelType: employeeType,
}

func EmployeeBossId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[selfreferential.Employee] {
	return badorm.FieldCondition[selfreferential.Employee, badorm.UUID]{
		FieldIdentifier: EmployeeBossIdField,
		Operator:        operator,
	}
}

var EmployeePreloadAttributes = badorm.NewPreloadCondition[selfreferential.Employee](EmployeeIdField, EmployeeCreatedAtField, EmployeeUpdatedAtField, EmployeeDeletedAtField, EmployeeBossIdField)
var EmployeePreloadRelations = []badorm.Condition[selfreferential.Employee]{EmployeePreloadBoss}
