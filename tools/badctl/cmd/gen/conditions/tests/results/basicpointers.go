// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	basicpointers "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/basicpointers"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var basicPointersType = reflect.TypeOf(*new(basicpointers.BasicPointers))
var BasicPointersIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: basicPointersType,
}

func BasicPointersId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, badorm.UUID]{
		FieldIdentifier: BasicPointersIdField,
		Operator:        operator,
	}
}

var BasicPointersCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: basicPointersType,
}

func BasicPointersCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, time.Time]{
		FieldIdentifier: BasicPointersCreatedAtField,
		Operator:        operator,
	}
}

var BasicPointersUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: basicPointersType,
}

func BasicPointersUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, time.Time]{
		FieldIdentifier: BasicPointersUpdatedAtField,
		Operator:        operator,
	}
}

var BasicPointersDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: basicPointersType,
}

func BasicPointersDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, gorm.DeletedAt]{
		FieldIdentifier: BasicPointersDeletedAtField,
		Operator:        operator,
	}
}

var BasicPointersBoolField = badorm.FieldIdentifier[bool]{
	Field:     "Bool",
	ModelType: basicPointersType,
}

func BasicPointersBool(operator badorm.Operator[bool]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, bool]{
		FieldIdentifier: BasicPointersBoolField,
		Operator:        operator,
	}
}

var BasicPointersIntField = badorm.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: basicPointersType,
}

func BasicPointersInt(operator badorm.Operator[int]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, int]{
		FieldIdentifier: BasicPointersIntField,
		Operator:        operator,
	}
}

var BasicPointersInt8Field = badorm.FieldIdentifier[int8]{
	Field:     "Int8",
	ModelType: basicPointersType,
}

func BasicPointersInt8(operator badorm.Operator[int8]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, int8]{
		FieldIdentifier: BasicPointersInt8Field,
		Operator:        operator,
	}
}

var BasicPointersInt16Field = badorm.FieldIdentifier[int16]{
	Field:     "Int16",
	ModelType: basicPointersType,
}

func BasicPointersInt16(operator badorm.Operator[int16]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, int16]{
		FieldIdentifier: BasicPointersInt16Field,
		Operator:        operator,
	}
}

var BasicPointersInt32Field = badorm.FieldIdentifier[int32]{
	Field:     "Int32",
	ModelType: basicPointersType,
}

func BasicPointersInt32(operator badorm.Operator[int32]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, int32]{
		FieldIdentifier: BasicPointersInt32Field,
		Operator:        operator,
	}
}

var BasicPointersInt64Field = badorm.FieldIdentifier[int64]{
	Field:     "Int64",
	ModelType: basicPointersType,
}

func BasicPointersInt64(operator badorm.Operator[int64]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, int64]{
		FieldIdentifier: BasicPointersInt64Field,
		Operator:        operator,
	}
}

var BasicPointersUIntField = badorm.FieldIdentifier[uint]{
	Field:     "UInt",
	ModelType: basicPointersType,
}

func BasicPointersUInt(operator badorm.Operator[uint]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint]{
		FieldIdentifier: BasicPointersUIntField,
		Operator:        operator,
	}
}

var BasicPointersUInt8Field = badorm.FieldIdentifier[uint8]{
	Field:     "UInt8",
	ModelType: basicPointersType,
}

func BasicPointersUInt8(operator badorm.Operator[uint8]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint8]{
		FieldIdentifier: BasicPointersUInt8Field,
		Operator:        operator,
	}
}

var BasicPointersUInt16Field = badorm.FieldIdentifier[uint16]{
	Field:     "UInt16",
	ModelType: basicPointersType,
}

func BasicPointersUInt16(operator badorm.Operator[uint16]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint16]{
		FieldIdentifier: BasicPointersUInt16Field,
		Operator:        operator,
	}
}

var BasicPointersUInt32Field = badorm.FieldIdentifier[uint32]{
	Field:     "UInt32",
	ModelType: basicPointersType,
}

func BasicPointersUInt32(operator badorm.Operator[uint32]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint32]{
		FieldIdentifier: BasicPointersUInt32Field,
		Operator:        operator,
	}
}

var BasicPointersUInt64Field = badorm.FieldIdentifier[uint64]{
	Field:     "UInt64",
	ModelType: basicPointersType,
}

func BasicPointersUInt64(operator badorm.Operator[uint64]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint64]{
		FieldIdentifier: BasicPointersUInt64Field,
		Operator:        operator,
	}
}

var BasicPointersUIntptrField = badorm.FieldIdentifier[uintptr]{
	Field:     "UIntptr",
	ModelType: basicPointersType,
}

func BasicPointersUIntptr(operator badorm.Operator[uintptr]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uintptr]{
		FieldIdentifier: BasicPointersUIntptrField,
		Operator:        operator,
	}
}

var BasicPointersFloat32Field = badorm.FieldIdentifier[float32]{
	Field:     "Float32",
	ModelType: basicPointersType,
}

func BasicPointersFloat32(operator badorm.Operator[float32]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, float32]{
		FieldIdentifier: BasicPointersFloat32Field,
		Operator:        operator,
	}
}

var BasicPointersFloat64Field = badorm.FieldIdentifier[float64]{
	Field:     "Float64",
	ModelType: basicPointersType,
}

func BasicPointersFloat64(operator badorm.Operator[float64]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, float64]{
		FieldIdentifier: BasicPointersFloat64Field,
		Operator:        operator,
	}
}

var BasicPointersComplex64Field = badorm.FieldIdentifier[complex64]{
	Field:     "Complex64",
	ModelType: basicPointersType,
}

func BasicPointersComplex64(operator badorm.Operator[complex64]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, complex64]{
		FieldIdentifier: BasicPointersComplex64Field,
		Operator:        operator,
	}
}

var BasicPointersComplex128Field = badorm.FieldIdentifier[complex128]{
	Field:     "Complex128",
	ModelType: basicPointersType,
}

func BasicPointersComplex128(operator badorm.Operator[complex128]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, complex128]{
		FieldIdentifier: BasicPointersComplex128Field,
		Operator:        operator,
	}
}

var BasicPointersStringField = badorm.FieldIdentifier[string]{
	Field:     "String",
	ModelType: basicPointersType,
}

func BasicPointersString(operator badorm.Operator[string]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, string]{
		FieldIdentifier: BasicPointersStringField,
		Operator:        operator,
	}
}

var BasicPointersByteField = badorm.FieldIdentifier[uint8]{
	Field:     "Byte",
	ModelType: basicPointersType,
}

func BasicPointersByte(operator badorm.Operator[uint8]) badorm.WhereCondition[basicpointers.BasicPointers] {
	return badorm.FieldCondition[basicpointers.BasicPointers, uint8]{
		FieldIdentifier: BasicPointersByteField,
		Operator:        operator,
	}
}

var BasicPointersPreloadAttributes = badorm.NewPreloadCondition[basicpointers.BasicPointers](BasicPointersIdField, BasicPointersCreatedAtField, BasicPointersUpdatedAtField, BasicPointersDeletedAtField, BasicPointersBoolField, BasicPointersIntField, BasicPointersInt8Field, BasicPointersInt16Field, BasicPointersInt32Field, BasicPointersInt64Field, BasicPointersUIntField, BasicPointersUInt8Field, BasicPointersUInt16Field, BasicPointersUInt32Field, BasicPointersUInt64Field, BasicPointersUIntptrField, BasicPointersFloat32Field, BasicPointersFloat64Field, BasicPointersComplex64Field, BasicPointersComplex128Field, BasicPointersStringField, BasicPointersByteField)
