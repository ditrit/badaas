// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	basicpointers "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/basicpointers"
	gorm "gorm.io/gorm"
	"time"
)

func BasicPointersId(exprs ...badorm.Expression[badorm.UUID]) badorm.FieldCondition[basicpointers.BasicPointers, badorm.UUID] {
	return badorm.FieldCondition[basicpointers.BasicPointers, badorm.UUID]{
		Expressions: exprs,
		Field:       "ID",
	}
}
func BasicPointersCreatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[basicpointers.BasicPointers, time.Time] {
	return badorm.FieldCondition[basicpointers.BasicPointers, time.Time]{
		Expressions: exprs,
		Field:       "CreatedAt",
	}
}
func BasicPointersUpdatedAt(exprs ...badorm.Expression[time.Time]) badorm.FieldCondition[basicpointers.BasicPointers, time.Time] {
	return badorm.FieldCondition[basicpointers.BasicPointers, time.Time]{
		Expressions: exprs,
		Field:       "UpdatedAt",
	}
}
func BasicPointersDeletedAt(exprs ...badorm.Expression[gorm.DeletedAt]) badorm.FieldCondition[basicpointers.BasicPointers, gorm.DeletedAt] {
	return badorm.FieldCondition[basicpointers.BasicPointers, gorm.DeletedAt]{
		Expressions: exprs,
		Field:       "DeletedAt",
	}
}
func BasicPointersBool(exprs ...badorm.Expression[*bool]) badorm.FieldCondition[basicpointers.BasicPointers, *bool] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *bool]{
		Expressions: exprs,
		Field:       "Bool",
	}
}
func BasicPointersInt(exprs ...badorm.Expression[*int]) badorm.FieldCondition[basicpointers.BasicPointers, *int] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *int]{
		Expressions: exprs,
		Field:       "Int",
	}
}
func BasicPointersInt8(exprs ...badorm.Expression[*int8]) badorm.FieldCondition[basicpointers.BasicPointers, *int8] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *int8]{
		Expressions: exprs,
		Field:       "Int8",
	}
}
func BasicPointersInt16(exprs ...badorm.Expression[*int16]) badorm.FieldCondition[basicpointers.BasicPointers, *int16] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *int16]{
		Expressions: exprs,
		Field:       "Int16",
	}
}
func BasicPointersInt32(exprs ...badorm.Expression[*int32]) badorm.FieldCondition[basicpointers.BasicPointers, *int32] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *int32]{
		Expressions: exprs,
		Field:       "Int32",
	}
}
func BasicPointersInt64(exprs ...badorm.Expression[*int64]) badorm.FieldCondition[basicpointers.BasicPointers, *int64] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *int64]{
		Expressions: exprs,
		Field:       "Int64",
	}
}
func BasicPointersUInt(exprs ...badorm.Expression[*uint]) badorm.FieldCondition[basicpointers.BasicPointers, *uint] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint]{
		Expressions: exprs,
		Field:       "UInt",
	}
}
func BasicPointersUInt8(exprs ...badorm.Expression[*uint8]) badorm.FieldCondition[basicpointers.BasicPointers, *uint8] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint8]{
		Expressions: exprs,
		Field:       "UInt8",
	}
}
func BasicPointersUInt16(exprs ...badorm.Expression[*uint16]) badorm.FieldCondition[basicpointers.BasicPointers, *uint16] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint16]{
		Expressions: exprs,
		Field:       "UInt16",
	}
}
func BasicPointersUInt32(exprs ...badorm.Expression[*uint32]) badorm.FieldCondition[basicpointers.BasicPointers, *uint32] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint32]{
		Expressions: exprs,
		Field:       "UInt32",
	}
}
func BasicPointersUInt64(exprs ...badorm.Expression[*uint64]) badorm.FieldCondition[basicpointers.BasicPointers, *uint64] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint64]{
		Expressions: exprs,
		Field:       "UInt64",
	}
}
func BasicPointersUIntptr(exprs ...badorm.Expression[*uintptr]) badorm.FieldCondition[basicpointers.BasicPointers, *uintptr] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uintptr]{
		Expressions: exprs,
		Field:       "UIntptr",
	}
}
func BasicPointersFloat32(exprs ...badorm.Expression[*float32]) badorm.FieldCondition[basicpointers.BasicPointers, *float32] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *float32]{
		Expressions: exprs,
		Field:       "Float32",
	}
}
func BasicPointersFloat64(exprs ...badorm.Expression[*float64]) badorm.FieldCondition[basicpointers.BasicPointers, *float64] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *float64]{
		Expressions: exprs,
		Field:       "Float64",
	}
}
func BasicPointersComplex64(exprs ...badorm.Expression[*complex64]) badorm.FieldCondition[basicpointers.BasicPointers, *complex64] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *complex64]{
		Expressions: exprs,
		Field:       "Complex64",
	}
}
func BasicPointersComplex128(exprs ...badorm.Expression[*complex128]) badorm.FieldCondition[basicpointers.BasicPointers, *complex128] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *complex128]{
		Expressions: exprs,
		Field:       "Complex128",
	}
}
func BasicPointersString(exprs ...badorm.Expression[*string]) badorm.FieldCondition[basicpointers.BasicPointers, *string] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *string]{
		Expressions: exprs,
		Field:       "String",
	}
}
func BasicPointersByte(exprs ...badorm.Expression[*uint8]) badorm.FieldCondition[basicpointers.BasicPointers, *uint8] {
	return badorm.FieldCondition[basicpointers.BasicPointers, *uint8]{
		Expressions: exprs,
		Field:       "Byte",
	}
}
