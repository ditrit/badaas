// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	package1 "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/multiplepackage/package1"
	package2 "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/multiplepackage/package2"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var package1Type = reflect.TypeOf(*new(package1.Package1))
var Package1IdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: package1Type,
}

func Package1Id(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[package1.Package1] {
	return badorm.FieldCondition[package1.Package1, badorm.UUID]{
		FieldIdentifier: Package1IdField,
		Operator:        operator,
	}
}

var Package1CreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: package1Type,
}

func Package1CreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[package1.Package1] {
	return badorm.FieldCondition[package1.Package1, time.Time]{
		FieldIdentifier: Package1CreatedAtField,
		Operator:        operator,
	}
}

var Package1UpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: package1Type,
}

func Package1UpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[package1.Package1] {
	return badorm.FieldCondition[package1.Package1, time.Time]{
		FieldIdentifier: Package1UpdatedAtField,
		Operator:        operator,
	}
}

var Package1DeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: package1Type,
}

func Package1DeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[package1.Package1] {
	return badorm.FieldCondition[package1.Package1, gorm.DeletedAt]{
		FieldIdentifier: Package1DeletedAtField,
		Operator:        operator,
	}
}
func Package1Package2(conditions ...badorm.Condition[package2.Package2]) badorm.IJoinCondition[package1.Package1] {
	return badorm.JoinCondition[package1.Package1, package2.Package2]{
		Conditions:         conditions,
		RelationField:      "Package2",
		T1Field:            "ID",
		T1PreloadCondition: Package1PreloadAttributes,
		T2Field:            "Package1ID",
	}
}

var Package1PreloadPackage2 = Package1Package2(Package2PreloadAttributes)
var Package1PreloadAttributes = badorm.NewPreloadCondition[package1.Package1](Package1IdField, Package1CreatedAtField, Package1UpdatedAtField, Package1DeletedAtField)
var Package1PreloadRelations = []badorm.Condition[package1.Package1]{Package1PreloadPackage2}
