// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	package1 "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/multiplepackage/package1"
	package2 "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/multiplepackage/package2"
	gorm "gorm.io/gorm"
	"time"
)

func Package1Id(v badorm.UUID) badorm.WhereCondition[package1.Package1] {
	return badorm.WhereCondition[package1.Package1]{
		Field: "id",
		Value: v,
	}
}
func Package1CreatedAt(v time.Time) badorm.WhereCondition[package1.Package1] {
	return badorm.WhereCondition[package1.Package1]{
		Field: "created_at",
		Value: v,
	}
}
func Package1UpdatedAt(v time.Time) badorm.WhereCondition[package1.Package1] {
	return badorm.WhereCondition[package1.Package1]{
		Field: "updated_at",
		Value: v,
	}
}
func Package1DeletedAt(v gorm.DeletedAt) badorm.WhereCondition[package1.Package1] {
	return badorm.WhereCondition[package1.Package1]{
		Field: "deleted_at",
		Value: v,
	}
}
func Package1Package2(conditions ...badorm.Condition[package2.Package2]) badorm.Condition[package1.Package1] {
	return badorm.JoinCondition[package1.Package1, package2.Package2]{
		Conditions: conditions,
		T1Field:    "id",
		T2Field:    "package1_id",
	}
}
func Package2Package1(conditions ...badorm.Condition[package1.Package1]) badorm.Condition[package2.Package2] {
	return badorm.JoinCondition[package2.Package2, package1.Package1]{
		Conditions: conditions,
		T1Field:    "package1_id",
		T2Field:    "id",
	}
}
