// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	customtype "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/customtype"
	gorm "gorm.io/gorm"
	"time"
)

func CustomTypeId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[customtype.CustomType] {
	return badorm.FieldCondition[customtype.CustomType, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func CustomTypeCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[customtype.CustomType] {
	return badorm.FieldCondition[customtype.CustomType, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func CustomTypeUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[customtype.CustomType] {
	return badorm.FieldCondition[customtype.CustomType, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func CustomTypeDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[customtype.CustomType] {
	return badorm.FieldCondition[customtype.CustomType, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}
func CustomTypeCustom(expr badorm.Expression[customtype.MultiString]) badorm.WhereCondition[customtype.CustomType] {
	return badorm.FieldCondition[customtype.CustomType, customtype.MultiString]{
		Expression:      expr,
		FieldIdentifier: badorm.FieldIdentifier{Field: "Custom"},
	}
}
