// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	overridereferencesinverse "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/overridereferencesinverse"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var computerType = reflect.TypeOf(*new(overridereferencesinverse.Computer))
var ComputerIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: computerType,
}

func ComputerId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.FieldCondition[overridereferencesinverse.Computer, badorm.UUID]{
		FieldIdentifier: ComputerIdField,
		Operator:        operator,
	}
}

var ComputerCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: computerType,
}

func ComputerCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.FieldCondition[overridereferencesinverse.Computer, time.Time]{
		FieldIdentifier: ComputerCreatedAtField,
		Operator:        operator,
	}
}

var ComputerUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: computerType,
}

func ComputerUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.FieldCondition[overridereferencesinverse.Computer, time.Time]{
		FieldIdentifier: ComputerUpdatedAtField,
		Operator:        operator,
	}
}

var ComputerDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: computerType,
}

func ComputerDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.FieldCondition[overridereferencesinverse.Computer, gorm.DeletedAt]{
		FieldIdentifier: ComputerDeletedAtField,
		Operator:        operator,
	}
}

var ComputerNameField = badorm.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: computerType,
}

func ComputerName(operator badorm.Operator[string]) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.FieldCondition[overridereferencesinverse.Computer, string]{
		FieldIdentifier: ComputerNameField,
		Operator:        operator,
	}
}
func ComputerProcessor(conditions ...badorm.Condition[overridereferencesinverse.Processor]) badorm.IJoinCondition[overridereferencesinverse.Computer] {
	return badorm.JoinCondition[overridereferencesinverse.Computer, overridereferencesinverse.Processor]{
		Conditions:         conditions,
		RelationField:      "Processor",
		T1Field:            "Name",
		T1PreloadCondition: ComputerPreloadAttributes,
		T2Field:            "ComputerName",
	}
}

var ComputerPreloadProcessor = ComputerProcessor(ProcessorPreloadAttributes)
var ComputerPreloadAttributes = badorm.NewPreloadCondition[overridereferencesinverse.Computer](ComputerIdField, ComputerCreatedAtField, ComputerUpdatedAtField, ComputerDeletedAtField, ComputerNameField)
var ComputerPreloadRelations = []badorm.Condition[overridereferencesinverse.Computer]{ComputerPreloadProcessor}
