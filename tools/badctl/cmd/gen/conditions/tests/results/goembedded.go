// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	goembedded "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/goembedded"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var goEmbeddedType = reflect.TypeOf(*new(goembedded.GoEmbedded))
var GoEmbeddedIdField = badorm.FieldIdentifier[badorm.UIntID]{
	Field:     "ID",
	ModelType: goEmbeddedType,
}

func GoEmbeddedId(operator badorm.Operator[badorm.UIntID]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, badorm.UIntID]{
		FieldIdentifier: GoEmbeddedIdField,
		Operator:        operator,
	}
}

var GoEmbeddedCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, time.Time]{
		FieldIdentifier: GoEmbeddedCreatedAtField,
		Operator:        operator,
	}
}

var GoEmbeddedUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, time.Time]{
		FieldIdentifier: GoEmbeddedUpdatedAtField,
		Operator:        operator,
	}
}

var GoEmbeddedDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, gorm.DeletedAt]{
		FieldIdentifier: GoEmbeddedDeletedAtField,
		Operator:        operator,
	}
}

var GoEmbeddedIntField = badorm.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: goEmbeddedType,
}

func GoEmbeddedInt(operator badorm.Operator[int]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, int]{
		FieldIdentifier: GoEmbeddedIntField,
		Operator:        operator,
	}
}

var GoEmbeddedToBeEmbeddedIntField = badorm.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: goEmbeddedType,
}

func GoEmbeddedToBeEmbeddedInt(operator badorm.Operator[int]) badorm.WhereCondition[goembedded.GoEmbedded] {
	return badorm.FieldCondition[goembedded.GoEmbedded, int]{
		FieldIdentifier: GoEmbeddedToBeEmbeddedIntField,
		Operator:        operator,
	}
}

var GoEmbeddedPreloadAttributes = badorm.NewPreloadCondition[goembedded.GoEmbedded](GoEmbeddedIdField, GoEmbeddedCreatedAtField, GoEmbeddedUpdatedAtField, GoEmbeddedDeletedAtField, GoEmbeddedIntField, GoEmbeddedToBeEmbeddedIntField)
