// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	gormembedded "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/gormembedded"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var gormEmbeddedType = reflect.TypeOf(*new(gormembedded.GormEmbedded))
var GormEmbeddedIdField = badorm.FieldIdentifier[badorm.UIntID]{
	Field:     "ID",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedId(operator badorm.Operator[badorm.UIntID]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, badorm.UIntID]{
		FieldIdentifier: GormEmbeddedIdField,
		Operator:        operator,
	}
}

var GormEmbeddedCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, time.Time]{
		FieldIdentifier: GormEmbeddedCreatedAtField,
		Operator:        operator,
	}
}

var GormEmbeddedUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, time.Time]{
		FieldIdentifier: GormEmbeddedUpdatedAtField,
		Operator:        operator,
	}
}

var GormEmbeddedDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, gorm.DeletedAt]{
		FieldIdentifier: GormEmbeddedDeletedAtField,
		Operator:        operator,
	}
}

var GormEmbeddedIntField = badorm.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedInt(operator badorm.Operator[int]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, int]{
		FieldIdentifier: GormEmbeddedIntField,
		Operator:        operator,
	}
}

var GormEmbeddedGormEmbeddedIntField = badorm.FieldIdentifier[int]{
	ColumnPrefix: "gorm_embedded_",
	Field:        "Int",
	ModelType:    gormEmbeddedType,
}

func GormEmbeddedGormEmbeddedInt(operator badorm.Operator[int]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, int]{
		FieldIdentifier: GormEmbeddedGormEmbeddedIntField,
		Operator:        operator,
	}
}

var GormEmbeddedGormEmbeddedNoPrefixIntField = badorm.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedGormEmbeddedNoPrefixInt(operator badorm.Operator[int]) badorm.WhereCondition[gormembedded.GormEmbedded] {
	return badorm.FieldCondition[gormembedded.GormEmbedded, int]{
		FieldIdentifier: GormEmbeddedGormEmbeddedNoPrefixIntField,
		Operator:        operator,
	}
}

var GormEmbeddedPreloadAttributes = badorm.NewPreloadCondition[gormembedded.GormEmbedded](GormEmbeddedIdField, GormEmbeddedCreatedAtField, GormEmbeddedUpdatedAtField, GormEmbeddedDeletedAtField, GormEmbeddedIntField, GormEmbeddedGormEmbeddedIntField, GormEmbeddedGormEmbeddedNoPrefixIntField)
