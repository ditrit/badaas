// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	basictypes "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/basictypes"
	gorm "gorm.io/gorm"
	"time"
)

func BasicTypesId(v badorm.UUID) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "ID",
		Value: v,
	}
}
func BasicTypesCreatedAt(v time.Time) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "CreatedAt",
		Value: v,
	}
}
func BasicTypesUpdatedAt(v time.Time) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UpdatedAt",
		Value: v,
	}
}
func BasicTypesDeletedAt(v gorm.DeletedAt) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "DeletedAt",
		Value: v,
	}
}
func BasicTypesBool(v bool) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Bool",
		Value: v,
	}
}
func BasicTypesInt(v int) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Int",
		Value: v,
	}
}
func BasicTypesInt8(v int8) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Int8",
		Value: v,
	}
}
func BasicTypesInt16(v int16) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Int16",
		Value: v,
	}
}
func BasicTypesInt32(v int32) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Int32",
		Value: v,
	}
}
func BasicTypesInt64(v int64) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Int64",
		Value: v,
	}
}
func BasicTypesUInt(v uint) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UInt",
		Value: v,
	}
}
func BasicTypesUInt8(v uint8) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UInt8",
		Value: v,
	}
}
func BasicTypesUInt16(v uint16) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UInt16",
		Value: v,
	}
}
func BasicTypesUInt32(v uint32) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UInt32",
		Value: v,
	}
}
func BasicTypesUInt64(v uint64) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UInt64",
		Value: v,
	}
}
func BasicTypesUIntptr(v uintptr) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "UIntptr",
		Value: v,
	}
}
func BasicTypesFloat32(v float32) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Float32",
		Value: v,
	}
}
func BasicTypesFloat64(v float64) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Float64",
		Value: v,
	}
}
func BasicTypesComplex64(v complex64) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Complex64",
		Value: v,
	}
}
func BasicTypesComplex128(v complex128) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Complex128",
		Value: v,
	}
}
func BasicTypesString(v string) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "String",
		Value: v,
	}
}
func BasicTypesByte(v uint8) badorm.WhereCondition[basictypes.BasicTypes] {
	return badorm.WhereCondition[basictypes.BasicTypes]{
		Field: "Byte",
		Value: v,
	}
}
