// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	overridereferences "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/overridereferences"
	gorm "gorm.io/gorm"
	"time"
)

func BrandId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[overridereferences.Brand] {
	return badorm.FieldCondition[overridereferences.Brand, badorm.UUID]{
		Expression:      expr,
		FieldIdentifier: badorm.IDFieldID,
	}
}
func BrandCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[overridereferences.Brand] {
	return badorm.FieldCondition[overridereferences.Brand, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.CreatedAtFieldID,
	}
}
func BrandUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[overridereferences.Brand] {
	return badorm.FieldCondition[overridereferences.Brand, time.Time]{
		Expression:      expr,
		FieldIdentifier: badorm.UpdatedAtFieldID,
	}
}
func BrandDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[overridereferences.Brand] {
	return badorm.FieldCondition[overridereferences.Brand, gorm.DeletedAt]{
		Expression:      expr,
		FieldIdentifier: badorm.DeletedAtFieldID,
	}
}

var brandNameFieldID = badorm.FieldIdentifier{Field: "Name"}

func BrandName(expr badorm.Expression[string]) badorm.WhereCondition[overridereferences.Brand] {
	return badorm.FieldCondition[overridereferences.Brand, string]{
		Expression:      expr,
		FieldIdentifier: brandNameFieldID,
	}
}

var BrandPreloadAttributes = badorm.NewPreloadCondition[overridereferences.Brand](brandNameFieldID)
var BrandPreloadRelations = []badorm.Condition[overridereferences.Brand]{}
