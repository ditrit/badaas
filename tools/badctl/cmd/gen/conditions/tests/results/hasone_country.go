// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	hasone "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/hasone"
	gorm "gorm.io/gorm"
	"time"
)

func CountryId(expr badorm.Expression[badorm.UUID]) badorm.WhereCondition[hasone.Country] {
	return badorm.FieldCondition[hasone.Country, badorm.UUID]{
		Expression: expr,
		Field:      "ID",
	}
}
func CountryCreatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasone.Country] {
	return badorm.FieldCondition[hasone.Country, time.Time]{
		Expression: expr,
		Field:      "CreatedAt",
	}
}
func CountryUpdatedAt(expr badorm.Expression[time.Time]) badorm.WhereCondition[hasone.Country] {
	return badorm.FieldCondition[hasone.Country, time.Time]{
		Expression: expr,
		Field:      "UpdatedAt",
	}
}
func CountryDeletedAt(expr badorm.Expression[gorm.DeletedAt]) badorm.WhereCondition[hasone.Country] {
	return badorm.FieldCondition[hasone.Country, gorm.DeletedAt]{
		Expression: expr,
		Field:      "DeletedAt",
	}
}
func CountryCapital(conditions ...badorm.Condition[hasone.City]) badorm.Condition[hasone.Country] {
	return badorm.JoinCondition[hasone.Country, hasone.City]{
		Conditions:    conditions,
		RelationField: "Capital",
		T1Field:       "ID",
		T2Field:       "CountryID",
	}
}
func CityCountry(conditions ...badorm.Condition[hasone.Country]) badorm.Condition[hasone.City] {
	return badorm.JoinCondition[hasone.City, hasone.Country]{
		Conditions:    conditions,
		RelationField: "Country",
		T1Field:       "CountryID",
		T2Field:       "ID",
	}
}
