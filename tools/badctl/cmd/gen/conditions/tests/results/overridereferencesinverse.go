// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	overridereferencesinverse "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/overridereferencesinverse"
	gorm "gorm.io/gorm"
	"time"
)

func ComputerId(v badorm.UUID) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.WhereCondition[overridereferencesinverse.Computer]{
		Field: "ID",
		Value: v,
	}
}
func ComputerCreatedAt(v time.Time) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.WhereCondition[overridereferencesinverse.Computer]{
		Field: "CreatedAt",
		Value: v,
	}
}
func ComputerUpdatedAt(v time.Time) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.WhereCondition[overridereferencesinverse.Computer]{
		Field: "UpdatedAt",
		Value: v,
	}
}
func ComputerDeletedAt(v gorm.DeletedAt) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.WhereCondition[overridereferencesinverse.Computer]{
		Field: "DeletedAt",
		Value: v,
	}
}
func ComputerName(v string) badorm.WhereCondition[overridereferencesinverse.Computer] {
	return badorm.WhereCondition[overridereferencesinverse.Computer]{
		Field: "Name",
		Value: v,
	}
}
func ComputerProcessor(conditions ...badorm.Condition[overridereferencesinverse.Processor]) badorm.Condition[overridereferencesinverse.Computer] {
	return badorm.JoinCondition[overridereferencesinverse.Computer, overridereferencesinverse.Processor]{
		Conditions: conditions,
		T1Field:    "Name",
		T2Field:    "ComputerName",
	}
}
func ProcessorComputer(conditions ...badorm.Condition[overridereferencesinverse.Computer]) badorm.Condition[overridereferencesinverse.Processor] {
	return badorm.JoinCondition[overridereferencesinverse.Processor, overridereferencesinverse.Computer]{
		Conditions: conditions,
		T1Field:    "ComputerName",
		T2Field:    "Name",
	}
}
