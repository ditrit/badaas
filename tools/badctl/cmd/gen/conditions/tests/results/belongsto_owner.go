// Code generated by badctl v0.0.0, DO NOT EDIT.
package conditions

import (
	badorm "github.com/ditrit/badaas/badorm"
	belongsto "github.com/ditrit/badaas/tools/badctl/cmd/gen/conditions/tests/belongsto"
	gorm "gorm.io/gorm"
	"reflect"
	"time"
)

var ownerType = reflect.TypeOf(*new(belongsto.Owner))
var OwnerIdField = badorm.FieldIdentifier[badorm.UUID]{
	Field:     "ID",
	ModelType: ownerType,
}

func OwnerId(operator badorm.Operator[badorm.UUID]) badorm.WhereCondition[belongsto.Owner] {
	return badorm.FieldCondition[belongsto.Owner, badorm.UUID]{
		FieldIdentifier: OwnerIdField,
		Operator:        operator,
	}
}

var OwnerCreatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: ownerType,
}

func OwnerCreatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[belongsto.Owner] {
	return badorm.FieldCondition[belongsto.Owner, time.Time]{
		FieldIdentifier: OwnerCreatedAtField,
		Operator:        operator,
	}
}

var OwnerUpdatedAtField = badorm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: ownerType,
}

func OwnerUpdatedAt(operator badorm.Operator[time.Time]) badorm.WhereCondition[belongsto.Owner] {
	return badorm.FieldCondition[belongsto.Owner, time.Time]{
		FieldIdentifier: OwnerUpdatedAtField,
		Operator:        operator,
	}
}

var OwnerDeletedAtField = badorm.FieldIdentifier[gorm.DeletedAt]{
	Field:     "DeletedAt",
	ModelType: ownerType,
}

func OwnerDeletedAt(operator badorm.Operator[gorm.DeletedAt]) badorm.WhereCondition[belongsto.Owner] {
	return badorm.FieldCondition[belongsto.Owner, gorm.DeletedAt]{
		FieldIdentifier: OwnerDeletedAtField,
		Operator:        operator,
	}
}

var OwnerPreloadAttributes = badorm.NewPreloadCondition[belongsto.Owner](OwnerIdField, OwnerCreatedAtField, OwnerUpdatedAtField, OwnerDeletedAtField)
