Find(tx *gorm.DB, filters squirrel.Sqlizer, pagination pagination.Paginator, sort SortOption) (*pagination.Page[T], error)

paginationConfiguration configuration.PaginationConfiguration

// Find entities of a Model
func (repository *CRUDRepositoryImpl[T, ID]) Find(
	tx *gorm.DB,
	filters squirrel.Sqlizer,
	page pagination.Paginator,
	sortOption SortOption,
) (*pagination.Page[T], error) {
	var instances []*T
	whereClause, values, err := filters.ToSql()
	if err != nil {
		return nil, err
	}

	if page != nil {
		tx = tx.
			Offset(
				int((page.Offset() - 1) * page.Limit()),
			).
			Limit(
				int(page.Limit()),
			)
	} else {
		page = pagination.NewPaginator(0, repository.paginationConfiguration.GetMaxElemPerPage())
	}

	if sortOption != nil {
		tx = tx.Order(buildClauseFromSortOption(sortOption))
	}

	err = tx.Where(whereClause, values...).Find(&instances).Error
	if err != nil {
		return nil, err
	}

	// Get Count
	nbElem, err := repository.count(tx, whereClause, values)
	if err != nil {
		return nil, err
	}

	return pagination.NewPage(instances, page.Offset(), page.Limit(), nbElem), nil
}



// Build a gorm order clause from a SortOption
func buildClauseFromSortOption(sortOption SortOption) clause.OrderByColumn {
	return clause.OrderByColumn{Column: clause.Column{Name: sortOption.Column()}, Desc: sortOption.Desc()}
}

// Count the number of record that match the where clause with the provided values on the db
func (repository *CRUDRepositoryImpl[T, ID]) count(tx *gorm.DB, whereClause string, values []interface{}) (uint, error) {
	var entity *T
	var count int64
	err := tx.Model(entity).Where(whereClause, values).Count(&count).Error
	if err != nil {
		return 0, err
	}

	return uint(count), nil
}

// query = query.InnerJoins("Product", query.Session(&gorm.Session{}).Model(&Product{}).Select("id").Where("\"Product\".int = ?", 1))
	// query = query.InnerJoins("Country", query.Session(&gorm.Session{}).Model(&Country{}).Select("id").Where("\"Country\".name = ?", "Argentina"))
	// query = query.Model(&City{}).InnerJoins("Capital_asd", query.Session(&gorm.Session{}).Model(&City{}).Select("id").Where("\"Capital_asd\".name = ?", "Buenos Aires"))