// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	configuration "github.com/ditrit/badaas/configuration"
	mock "github.com/stretchr/testify/mock"

	zap "go.uber.org/zap"
)

// AuthenticationConfiguration is an autogenerated mock type for the AuthenticationConfiguration type
type AuthenticationConfiguration struct {
	mock.Mock
}

// GetAuthType provides a mock function with given fields:
func (_m *AuthenticationConfiguration) GetAuthType() configuration.AuthType {
	ret := _m.Called()

	var r0 configuration.AuthType
	if rf, ok := ret.Get(0).(func() configuration.AuthType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(configuration.AuthType)
	}

	return r0
}

// Log provides a mock function with given fields: logger
func (_m *AuthenticationConfiguration) Log(logger *zap.Logger) {
	_m.Called(logger)
}

// Reload provides a mock function with given fields:
func (_m *AuthenticationConfiguration) Reload() {
	_m.Called()
}

type mockConstructorTestingTNewAuthenticationConfiguration interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthenticationConfiguration creates a new instance of AuthenticationConfiguration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthenticationConfiguration(t mockConstructorTestingTNewAuthenticationConfiguration) *AuthenticationConfiguration {
	mock := &AuthenticationConfiguration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
