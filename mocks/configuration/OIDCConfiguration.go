// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	zap "go.uber.org/zap"
)

// OIDCConfiguration is an autogenerated mock type for the OIDCConfiguration type
type OIDCConfiguration struct {
	mock.Mock
}

// GetClaimIdentifier provides a mock function with given fields:
func (_m *OIDCConfiguration) GetClaimIdentifier() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetClientID provides a mock function with given fields:
func (_m *OIDCConfiguration) GetClientID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetClientSecret provides a mock function with given fields:
func (_m *OIDCConfiguration) GetClientSecret() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetIssuer provides a mock function with given fields:
func (_m *OIDCConfiguration) GetIssuer() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetRedirectURL provides a mock function with given fields:
func (_m *OIDCConfiguration) GetRedirectURL() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetScopes provides a mock function with given fields:
func (_m *OIDCConfiguration) GetScopes() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Log provides a mock function with given fields: logger
func (_m *OIDCConfiguration) Log(logger *zap.Logger) {
	_m.Called(logger)
}

// Reload provides a mock function with given fields:
func (_m *OIDCConfiguration) Reload() {
	_m.Called()
}

type mockConstructorTestingTNewOIDCConfiguration interface {
	mock.TestingT
	Cleanup(func())
}

// NewOIDCConfiguration creates a new instance of OIDCConfiguration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOIDCConfiguration(t mockConstructorTestingTNewOIDCConfiguration) *OIDCConfiguration {
	mock := &OIDCConfiguration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
