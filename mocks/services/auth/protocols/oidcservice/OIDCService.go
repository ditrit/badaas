// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// OIDCService is an autogenerated mock type for the OIDCService type
type OIDCService struct {
	mock.Mock
}

// BuildRedirectURL provides a mock function with given fields: state
func (_m *OIDCService) BuildRedirectURL(state string) string {
	ret := _m.Called(state)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ExchangeAuthorizationCode provides a mock function with given fields: code
func (_m *OIDCService) ExchangeAuthorizationCode(code string) (string, error) {
	ret := _m.Called(code)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(code)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOIDCService interface {
	mock.TestingT
	Cleanup(func())
}

// NewOIDCService creates a new instance of OIDCService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOIDCService(t mockConstructorTestingTNewOIDCService) *OIDCService {
	mock := &OIDCService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
